<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[webpack-dev-server解决跨域代理]]></title>
      <url>http://julytian.coding.me/2017/04/14/webpack-dev-server%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E4%BB%A3%E7%90%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>在webpack.config.js中增加proxy内容，设置代理</p>
</blockquote>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">devServer: &#123;</div><div class="line">    <span class="attr">host</span> : <span class="string">'192.168.24.57'</span>,</div><div class="line">    <span class="attr">port</span>: <span class="number">3000</span>,</div><div class="line">    <span class="attr">proxy</span> : &#123;</div><div class="line">        <span class="string">'/ajax/*'</span>: &#123; <span class="comment">//只要指向/ajax/的请求，都会自动代理到下面的target的地址</span></div><div class="line">            target: <span class="string">'http://192.168.3.100'</span>, <span class="comment">//对方服务器地址</span></div><div class="line">            secure: <span class="literal">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>接着我们在请求ajax的时候，一定要请求当前服务器的路径，并不是请求对方服务器的路径。比如：</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//这里请求自己服务器，如果自己服务器有端口号，同样要加上端口号</span></div><div class="line"><span class="keyword">this</span>.$http.get(<span class="string">'http://192.168.24.57:3000/ajax/getNews.php'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(n.data)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信小程序授权权处理]]></title>
      <url>http://julytian.coding.me/2017/04/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8E%88%E6%9D%83%E6%9D%83%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们在编写微信小程序登录页时，碰到一个大坑。一般搜索安装小程序打开页面首先都会提示你是否授权，授权就表示我们可以获取到 <code>openid</code>,及本次登录的 会话密钥（<code>session_key</code>）。问题来了，如果用户拒绝不点击授权的话，我们是拿不到用户的信息。并且这个授权弹窗以后是不会再被调用执行了。<strong>一脸懵逼</strong>。</p>
<a id="more"></a>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>翻阅文档没找到结果，到时发现一个新版本的API是可以处理这个情况：<code>wx.openSetting(OBJECT)</code>。</p>
<blockquote>
<p>基础库版本 1.1.0 开始支持，低版本需做兼容处理</p>
<p>微信客户端 6.5.6 版本开始支持</p>
</blockquote>
<p>调起客户端小程序设置界面,返回用户设置的操作结果。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wx.openSetting(&#123;</div><div class="line">  <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</div><div class="line">      res.authSetting = &#123;</div><div class="line">        <span class="string">"scope.userInfo"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="string">"scope.userLocation"</span>: <span class="literal">true</span></div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>这里就可以拿到用户的 <code>userinfo</code>,假如我们在全局 <code>app.js</code>里面定义了, 成功那里可以设置userinfo的值。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">globalData: &#123;</div><div class="line">    <span class="attr">userInfo</span>: <span class="literal">null</span>,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="兼容方案-京东"><a href="#兼容方案-京东" class="headerlink" title="兼容方案(京东)"></a>兼容方案(京东)</h2><p>因为 <code>wx.openSetting(OBJECT)</code> 是 <strong>微信客户端 6.5.6 版本</strong> 开始支持的，所以必须选择考虑低版本用户。参考京东方案，目前只能找出如果用户拒绝授权只能告诉用户强制删除小程序重新安装去授权登录。真是日了狗了，微信小程序！！！！</p>
<p>目前参考京东小程序的做法,拒绝授权跳到登录失败提示页：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">showModel: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    wx.showModal(&#123;</div><div class="line">      <span class="attr">content</span>: <span class="string">'你还没微信授权,不能参与商品购买'</span>,</div><div class="line">      <span class="attr">confirmColor</span>: <span class="string">'#dd2726'</span>,</div><div class="line">      <span class="attr">cancelColor</span>: <span class="string">'#dd2726'</span>,</div><div class="line">      <span class="attr">showCancel</span>: <span class="literal">false</span>,</div><div class="line">      <span class="attr">confirmText</span>: <span class="string">'我知道了'</span>,</div><div class="line">      <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (res.confirm) &#123;</div><div class="line">          wx.navigateTo(&#123;</div><div class="line">                <span class="attr">url</span>: <span class="string">"../loginfail/loginfail"</span></div><div class="line">          &#125;);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p><img src="http://7xo0zm.com1.z0.glb.clouddn.com/loginfail.png" alt="登录失败"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vue与node结合开发部署]]></title>
      <url>http://julytian.coding.me/2017/04/06/vue%E4%B8%8Enode%E7%BB%93%E5%90%88%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>目前，技术圈都流行前后端分离，服务端渲染。vuejs由于其友好的中文文档，相对于react容易上手。服务端,我喜欢使用<code>nodejs</code>搭配<code>express</code> 框架配合搭建提供一个API服务，以及服务端渲染,客户端则选择 <code>vuejs</code> 开发前端页面，<code>vue-router</code>做路由，<code>vuex</code>做状态管理 , <code>axios</code> 做ajax请求。</p>
<a id="more"></a>
<h2 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h2><p><strong>1.全局安装 Vue-cli</strong> </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i vue-cli -g</div></pre></td></tr></table></figure>
<p><strong>2.创建webpack 模板 项目文件，按照提示一直下一步，完成后按提示执行代码</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vue init webpack vue-node</div></pre></td></tr></table></figure>
<p><strong>3.安装包依赖并运行</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd vue-node</div><div class="line">npm install</div><div class="line">npm run dev</div></pre></td></tr></table></figure>
<blockquote>
<p>tips: 如果npm卡住，可以使用 淘宝源 或者 安装 cnpm </p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g cnpm --registry=https:<span class="comment">//registry.npm.taobao.org</span></div></pre></td></tr></table></figure>
<p><strong>4.修改文件结构</strong></p>
<ul>
<li>将 <code>src</code> 文件夹修改为 <code>client</code></li>
<li>将 <code>webpack.base.conf.js</code> 内的 <code>src</code> 地址修改为 <code>client</code></li>
</ul>
<p><strong>5.创建服务端</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir server</div><div class="line">cd server/</div><div class="line">touch app.js</div></pre></td></tr></table></figure>
<p><strong>6.安装express</strong> </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install express --save</div><div class="line">npm install body-parser --save</div></pre></td></tr></table></figure>
<p><strong>7.写后端启动文件 app.js</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> app = express();</div><div class="line"></div><div class="line">app.use(bodyParser.json());</div><div class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</div><div class="line"><span class="comment">// 访问静态资源</span></div><div class="line">app.use(express.static(path.resolve(__dirname, <span class="string">'../dist'</span>)));</div><div class="line"><span class="comment">// 访问单页</span></div><div class="line">app.get(<span class="string">'*'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> html = fs.readFileSync(path.resolve(__dirname, <span class="string">'../dist/index.html'</span>), <span class="string">'utf-8'</span>);</div><div class="line">    res.send(html);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 监听</span></div><div class="line">app.listen(<span class="number">8081</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'success listen...8081'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="打包并部署"><a href="#打包并部署" class="headerlink" title="打包并部署"></a>打包并部署</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm run build</div><div class="line">node server/app.js</div></pre></td></tr></table></figure>
<p>在浏览器输入 <code>http://127.0.0.1:8081/</code> 就能看到页面了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信小程序踩坑笔记]]></title>
      <url>http://julytian.coding.me/2017/04/06/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B8%A9%E5%9D%91%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h2 id="远程图片返回404处理"><a href="#远程图片返回404处理" class="headerlink" title="远程图片返回404处理"></a>远程图片返回404处理</h2><p>当网络请求图片服务器返回404时，<code>image</code> 返回空白结果，影响美观，希望和网页一样出错则显示默认占位图。</p>
<p>效果如下:</p>
<p><img src="http://7xo0zm.com1.z0.glb.clouddn.com/clipboard.png" alt="占位图"></p>
<p><code>image</code> 组件有个API表示：</p>
<blockquote>
<p>当错误发生时，发布到 AppService 的事件名，事件对象event.detail = {errMsg: ‘something wrong’}</p>
</blockquote>
<a id="more"></a>
<p>所以，我们可以在 组件上绑定 <code>binderror</code>, 大致如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"list-pic"</span> <span class="attr">style</span>=<span class="string">"height: &#123;&#123;windowW/2*1.35&#125;&#125;px;"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item.PicUrl&#125;&#125;"</span> <span class="attr">binderror</span>=<span class="string">"onImageError"</span> <span class="attr">data-err-img</span>=<span class="string">"searchResults[&#123;&#123;index&#125;&#125;].PicUrl"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div></pre></td></tr></table></figure>
<p>事件处理思路大致如下：</p>
<blockquote>
<p>当发生错误时调用 binderror 事件函数， 通过 data-* 获取到默认占位图路径，然后重新设置 image 的 url</p>
<p>通过dataset属性将image组件的src变量值存入。binderror事件通过获取属性变量值改变data的数据。当然这个有个弊端，就是image组件的src是动态的值而不能是直接指向某张图片的情况下。</p>
</blockquote>
<p>上面是针对单一图片出现错误进行处理，当时我们一般都是一个 结果数组列表的形式，这个时候 <code>binderror</code> 事件是在图片错误的时候才会调用该事件的，那么在事件中实际上是通过 <code>data-*</code>获取了list中当前错误的对象图片在进行<code>setData</code> 的。</p>
<p>多个<code>image</code>报错处理代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"list-pic"</span> <span class="attr">style</span>=<span class="string">"height: &#123;&#123;windowW/2*1.35&#125;&#125;px;"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item.PicUrl&#125;&#125;"</span> <span class="attr">binderror</span>=<span class="string">"onImageError"</span> <span class="attr">data-err-img</span>=<span class="string">"searchResults[&#123;&#123;index&#125;&#125;].PicUrl"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">onImageError: <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> _errImg=ev.target.dataset.errImg;  </div><div class="line">  <span class="keyword">var</span> _errObj=&#123;&#125;;  </div><div class="line">  _errObj[_errImg]=<span class="string">"http://i2.mbscss.com/img/moonbasa/2014/jue/M10_27_203039.jpg"</span>;  </div><div class="line">  <span class="built_in">console</span>.log( ev.detail.errMsg+<span class="string">"----"</span> + <span class="string">"----"</span> +_errImg );  </div><div class="line">  that.setData(_errObj); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>但是这样存在一个情况就是每个页面都写这个程序不是很臃肿，那么我们考虑怎么把他写入到模块js文件里面呢？</p>
<p>解决方案：：先把 <code>this</code>对象传入到js函数里面，就可以直接修改外面的data数据了。具体函数如下：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//远程图片no found情况下指引  </span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">errImgFun</span>(<span class="params">ev, that</span>)</span>&#123;  </div><div class="line">  <span class="keyword">var</span> _errImg=ev.target.dataset.errImg;  </div><div class="line">  <span class="keyword">var</span> _errObj=&#123;&#125;;  </div><div class="line">  _errObj[_errImg]=<span class="string">"http://i2.mbscss.com/img/moonbasa/2014/jue/M10_27_203039.jpg"</span>;  </div><div class="line">  <span class="built_in">console</span>.log( ev.detail.errMsg+<span class="string">"----"</span> + <span class="string">"----"</span> +_errImg );  </div><div class="line">  that.setData(_errObj);    </div><div class="line">&#125;  </div><div class="line"><span class="built_in">module</span>.exports = &#123;  </div><div class="line">  <span class="attr">errImgFun</span>: errImgFun  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在<code>xx.js</code> 里面引入调用:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 处理图片加载404问题</span></div><div class="line"><span class="keyword">var</span> errorImage = <span class="built_in">require</span>(<span class="string">'../../utils/errorImage.js'</span>);</div><div class="line"><span class="comment">// 远程图片加载404显示默认图</span></div><div class="line">onImageError: <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</div><div class="line">     <span class="keyword">var</span> _that=<span class="keyword">this</span>;  </div><div class="line">     errorImage.errImgFun(ev, _that);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="scroll-view-组件在-tabar页面中不同系统下高度不一致的诡异问题"><a href="#scroll-view-组件在-tabar页面中不同系统下高度不一致的诡异问题" class="headerlink" title="scroll-view 组件在 tabar页面中不同系统下高度不一致的诡异问题"></a>scroll-view 组件在 tabar页面中不同系统下高度不一致的诡异问题</h2><p><img src="http://7xo0zm.com1.z0.glb.clouddn.com/clipboard2.png" alt=""></p>
<p>如上图，我们有个需求是这样的，左边点击分类，右边更新，并且如果数据多可以滚动。当初考虑方法是采用左右二个 <code>scroll-view</code>组件做，因为它是可滚动视图区域，可以根据 设备的 系统信息API 获取到屏幕的高度设置 <code>scroll-view</code> 的高度，跟随设备屏幕高度自适应。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">wx.getSystemInfo(&#123;</div><div class="line">  <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(res.model)</div><div class="line">    <span class="built_in">console</span>.log(res.pixelRatio)</div><div class="line">    <span class="built_in">console</span>.log(res.windowWidth)</div><div class="line">    <span class="built_in">console</span>.log(res.windowHeight)</div><div class="line">    <span class="built_in">console</span>.log(res.language)</div><div class="line">    <span class="built_in">console</span>.log(res.version)</div><div class="line">    <span class="built_in">console</span>.log(res.platform)</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>获取到设备的屏幕高度，从而设置 <code>scroll-view</code> 的高度。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">scroll-y</span>=<span class="string">"true"</span> <span class="attr">style</span>=<span class="string">"height:&#123;&#123;deviceHeight&#125;&#125;px"</span> <span class="attr">class</span>=<span class="string">"left_tabbar_list"</span>&gt;</span><span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></div></pre></td></tr></table></figure>
<p>理论上，这样设置是没有问题的，在非 <code>tabar</code> 页面设置高度， IOS和安卓系统下都是没问题的，但是在 <code>tabar</code>页面上，在 <strong>iOS</strong> 下就会出现下面的 <code>tabar</code>遮住了滚动高度，出现偏差，滚动无法滚动完全出来。</p>
<p>网上查了相关资料也没有一个说法，我不断测试发现 IOS 下获取的屏幕高度把 <code>tabar</code> 的高度也计算进来了，<code>tabbar</code>的高度是 <code>50px</code> , 所以，我们需要根据不同设备系统计算高度，大致方法如下：</p>
<blockquote>
<p>IOS下获取到设备的屏幕高度，然后减去 tabar 的高度，安卓则不变</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">wx.getSystemInfo(&#123;</div><div class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</div><div class="line">        that.setData(&#123;</div><div class="line">          <span class="attr">deviceWidth</span>: res.windowWidth,</div><div class="line">          <span class="attr">deviceHeight</span>: res.windowHeight<span class="number">-50</span>+<span class="string">'px'</span>,</div><div class="line">          <span class="attr">platform</span>: res.platform</div><div class="line">        &#125;);</div><div class="line">      &#125;</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">scroll-y</span>=<span class="string">"true"</span> <span class="attr">style</span>=<span class="string">"height:&#123;&#123;platform=='ios'?deviceHeight:'100%'&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"left_tabbar_list"</span>&gt;</span><span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></div></pre></td></tr></table></figure>
<p>经过测试，IOS和安卓下面都没有问题了。</p>
<h2 id="小程序跨页面通信处理"><a href="#小程序跨页面通信处理" class="headerlink" title="小程序跨页面通信处理"></a>小程序跨页面通信处理</h2><blockquote>
<p>注意：为了不让用户在使用小程序时造成困扰，我们规定页面路径只能是五层，请尽量避免多层级的交互方式。</p>
</blockquote>
<p>微信小程序对页面跳转做了严格限制处理。但是有时，需求超过了5层，并且需要跨页面来回跳转处理数据，我这边的小程序就涉及到这样一个要求：搜索页跳到筛选页，做完处理跳回搜索页查询，来回跨页面跳转，所以筛选页面不能使用 <code>navigateTo</code>,因为<strong>来回跳转容易出现超过5层，出bug，无法继续跳转</strong>。</p>
<p>解决办法，筛选页面使用 跨页面通信，直接 <code>navigateBack</code>返回，避免再次出现超过5层跳转情况。</p>
<p>这里，我们使用 <strong>github</strong> 上个一个通信操作库，<a href="http://weappdev.com/t/wxnotificationcenter/233" target="_blank" rel="external">地址</a>, 里面有基本用法.</p>
<p>问题出处情况如下：搜索跳到筛选，又跳回来：</p>
<p><img src="http://7xo0zm.com1.z0.glb.clouddn.com/clipboard3.png" alt="搜索"></p>
<p><img src="http://7xo0zm.com1.z0.glb.clouddn.com/clipboard4.png" alt="筛选"></p>
<p>部分代码处理如下:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 跨页面通信方法</span></div><div class="line"><span class="keyword">var</span> WxNotificationCenter = <span class="built_in">require</span>(<span class="string">'../../utils/WxNotificationCenter.js'</span>);</div><div class="line"></div><div class="line"><span class="comment">// 搜索页</span></div><div class="line">wx.navigateTo(&#123;</div><div class="line">   <span class="attr">url</span>: <span class="string">'../filtrate/filtrate?sourcefrom=search&amp;keyword='</span> + that.data.inputVal + <span class="string">'&amp;order='</span> + that.data.order + <span class="string">'&amp;orderby='</span> + that.data.orderby</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 筛选页</span></div><div class="line"><span class="comment">// 向上一页发送一个通知</span></div><div class="line">WxNotificationCenter.postNotificationName(<span class="string">'filtrateNotification'</span>, filtrateUrl);</div><div class="line">wx.navigateBack();</div><div class="line"></div><div class="line"><span class="comment">// 搜索页接收通知</span></div><div class="line"><span class="comment">// 从筛选跳转回来的操作</span></div><div class="line">WxNotificationCenter.addNotification(<span class="string">'filtrateNotification'</span>, that.onFiltrateNotification, that);</div></pre></td></tr></table></figure>
<blockquote>
<p>注意： 新版小程序的 <code>wx.redirectTo(OBJECT)</code> 可以回传参数了，这样就可以避免跨页面传参了，只需要在参数做个判断来自哪个页面的信息就可以了！！</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sublime 快捷键精华版(转载)]]></title>
      <url>http://julytian.coding.me/2017/02/08/%E5%BF%AB%E6%8D%B7%E9%94%AE%E7%B2%BE%E5%8D%8E%E7%89%88%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><a id="more"></a>
<p><code>Ctrl+Shift+P</code>：打开命令面板<br><code>Ctrl+P</code>：搜索项目中的文件<br><code>Ctrl+G</code>：跳转到第几行<br><code>Ctrl+W</code>：关闭当前打开文件<br><code>Ctrl+Shift+W</code>：关闭所有打开文件<br><code>Ctrl+Shift+V</code>：粘贴并格式化<br><code>Ctrl+D</code>：选择单词，重复可增加选择下一个相同的单词<br><code>Ctrl+L</code>：选择行，重复可依次增加选择下一行<br><code>Ctrl+Shift+L</code>：选择多行<br><code>Ctrl+Shift+Enter</code>：在当前行前插入新行<br><code>Ctrl+X</code>：删除当前行<br><code>Ctrl+M</code>：跳转到对应括号<br><code>Ctrl+U</code>：软撤销，撤销光标位置<br><code>Ctrl+J</code>：选择标签内容<br><code>Ctrl+F</code>：查找内容<br><code>Ctrl+Shift+F</code>：查找并替换<br><code>Ctrl+H</code>：替换<br><code>Ctrl+R</code>：前往method<br><code>Ctrl+N</code>：新建窗口<br><code>Ctrl+K+B</code>：开关侧栏<br><code>Ctrl+Shift+M</code>：选中当前括号内容，重复可选着括号本身<br><code>Ctrl+F2</code>：设置/删除标记<br><code>Ctrl+/</code>：注释当前行<br><code>Ctrl+Shift+/</code>：当前位置插入注释<br><code>Ctrl+Alt+/</code>：块注释，并Focus到首行，写注释说明用的<br><code>Ctrl+Shift+A</code>：选择当前标签前后，修改标签用的<br><code>F11</code>：全屏<br><code>Shift+F11</code>：全屏免打扰模式，只编辑当前文件<br><code>Alt+F3</code>：选择所有相同的词<br><code>Alt+.</code>：闭合标签<br><code>Alt+Shift+数字</code>：分屏显示<br><code>Alt+数字</code>：切换打开第N个文件<br><code>Shift+右键拖动</code>：光标多不，用来更改或插入列内容<br>鼠标的前进后退键可切换Tab文件<br>按Ctrl，依次点击或选取，可需要编辑的多个位置<br>按Ctrl+Shift+上下键，可替换行</p>
<h2 id="选择类"><a href="#选择类" class="headerlink" title="选择类"></a>选择类</h2><p><code>Ctrl+D</code>：选中光标所占的文本，继续操作则会选中下一个相同的文本。<br><code>Alt+F3</code>：选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。<br><code>Ctrl+L</code>：选中整行，继续操作则继续选择下一行，效果和Shift+↓效果一样。<br><code>Ctrl+Shift+L</code>：先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。<br><code>Ctrl+Shift+M</code>：选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。<br><code>Ctrl+M</code>：光标移动至括号内结束或开始的位置。<br><code>Ctrl+Enter</code>：在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。<br><code>Ctrl+Shift+Enter</code>：在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。<br><code>Ctrl+Shift+[</code>：选中代码，按下快捷键，折叠代码。<br><code>Ctrl+Shift+]</code>：选中代码，按下快捷键，展开代码。<br><code>Ctrl+K+0</code>：展开所有折叠代码。<br><code>Ctrl+←</code>：向左单位性地移动光标，快速移动光标。<br><code>Ctrl+→</code>：向右单位性地移动光标，快速移动光标。<br><code>shift+↑</code>：向上选中多行。<br><code>shift+↓</code>：向下选中多行。<br><code>Shift+←</code>：向左选中文本。<br><code>Shift+→</code>：向右选中文本。<br><code>Ctrl+Shift+←</code>：向左单位性地选中文本。<br><code>Ctrl+Shift+→</code>：向右单位性地选中文本。<br><code>Ctrl+Shift+↑</code>：将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。<br><code>Ctrl+Shift+↓</code>：将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。<br><code>Ctrl+Alt+↑</code>：向上添加多行光标，可同时编辑多行。<br><code>Ctrl+Alt+↓</code>：向下添加多行光标，可同时编辑多行。</p>
<h2 id="编辑类"><a href="#编辑类" class="headerlink" title="编辑类"></a>编辑类</h2><p><code>Ctrl+J</code>：合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。<br><code>Ctrl+Shift+D</code>：复制光标所在整行，插入到下一行。<br><code>Tab</code>：向右缩进。<br><code>Shift+Tab</code>：向左缩进。<br><code>Ctrl+K+K</code>：从光标处开始删除代码至行尾。<br><code>Ctrl+Shift+K</code>：删除整行。<br><code>Ctrl+/</code>：注释单行。<br><code>Ctrl+Shift+/</code>：注释多行。<br><code>Ctrl+K+U</code>：转换大写。<br><code>Ctrl+K+L</code>：转换小写。<br><code>Ctrl+Z</code>：撤销。<br><code>Ctrl+Y</code>：恢复撤销。<br><code>Ctrl+U</code>：软撤销，感觉和Gtrl+Z一样。<br><code>Ctrl+F2</code>：设置书签<br><code>Ctrl+T</code>：左右字母互换。<br><code>F6</code>：单词检测拼写</p>
<h2 id="搜索类"><a href="#搜索类" class="headerlink" title="搜索类"></a>搜索类</h2><p><code>Ctrl+F</code>：打开底部搜索框，查找关键字。<br><code>Ctrl+shift+F</code>：在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。<br><code>Ctrl+P</code>：打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。<br><code>Ctrl+R</code>：打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。<br><code>Ctrl+</code>：打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。<br><code>Ctrl+Shift+P</code>：打开命令框。场景栗子：打开命名框，输入关键字，调用sublime：text或插件的功能，例如使用package安装插件。<br><code>Esc</code>：退出光标多行选择，退出搜索框，命令框等。</p>
<h2 id="显示类"><a href="#显示类" class="headerlink" title="显示类"></a>显示类</h2><p><code>Ctrl+Tab</code>：按文件浏览过的顺序，切换当前窗口的标签页。<br><code>Ctrl+PageUp</code>：向右切换当前窗口的标签页。<br><code>Alt+Shift+1</code>：窗口分屏，恢复默认1屏（非小键盘的数字）<br><code>Alt+Shift+2</code>：左右分屏-2列<br><code>Alt+Shift+3</code>：左右分屏-3列<br><code>Alt+Shift+4</code>：左右分屏-4列<br><code>Alt+Shift+5</code>：等分4屏<br><code>Alt+Shift+9</code>：垂直分屏-3屏<br><code>Ctrl+K+B</code>：开启/关闭侧边栏。<br><code>F11</code>：全屏模式<br><code>Shift+F11</code>：免打扰模式</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mongoose入门]]></title>
      <url>http://julytian.coding.me/2017/02/07/mongoose%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>MongoDB是一个开源的NoSQL数据库，相比MySQL那样的关系型数据库，它更显得轻巧、灵活，非常适合在数据规模很大、事务性不强的场合下使用。</p>
<p>它是一个对象数据库，没有表、行等概念，也没有固定的模式和结构，所有的数据以文档的形式存储(文档，就是一个关联数组式的对象，它的内部由属性组成，一个属性对应的值可能是一个数、字符串、日期、数组，甚至是一个嵌套的文档。)，数据格式就是<code>JSON</code>。</p>
<p>Mongoose是MongoDB的一个对象模型工具，是基于node-mongodb-native开发的MongoDB nodejs驱动，可以在异步的环境下执行。</p>
<p>同时它也是针对MongoDB操作的一个对象模型库，封装了MongoDB对文档的的一些增删改查等常用方法，让NodeJS操作Mongodb数据库变得更加灵活简单。</p>
</blockquote>
<ul>
<li><a href="http://mongoosejs.com/docs/guide.html" target="_blank" rel="external">API文档</a></li>
<li><a href="https://github.com/Automattic/mongoose" target="_blank" rel="external">github</a></li>
</ul>
<h2 id="安装使用mongoose"><a href="#安装使用mongoose" class="headerlink" title="安装使用mongoose"></a>安装使用mongoose</h2><ol>
<li>安装mongoose：<code>npm install mongoose</code></li>
<li>引用mongoose：<code>var mongoose = require(&quot;mongoose&quot;);</code></li>
<li>使用 <strong>mongoose</strong> 连接数据库: <code>var db = mongoose.connect(&quot;mongodb://user:pass@localhost:port/database&quot;);</code></li>
<li>检查默认数据库test，是否可以正常连接成功 </li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">"mongoose"</span>);</div><div class="line"><span class="keyword">var</span> db = mongoose.connect(<span class="string">"mongodb://localhost:27017/test"</span>);</div><div class="line"><span class="comment">/**</span></div><div class="line"> * 连接异常</div><div class="line"> */</div><div class="line">db.connection.on(<span class="string">"error"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"数据库连接失败："</span> + error);</div><div class="line">&#125;);</div><div class="line"><span class="comment">/**</span></div><div class="line">  * 连接成功</div><div class="line">  */</div><div class="line">db.connection.on(<span class="string">"open"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"数据库连接成功"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>在MongoDB中，多个 <strong>Document</strong> 可以组成 <strong>Collection</strong> (以下简称集合)，多个集合又可以组成数据库(database)。</p>
<p><strong>文档</strong> :</p>
<blockquote>
<p>是MongoDB键值对的一个有序集，在JavaScript里文档被表示成对象。<br>非常类似于关系型数据库管理系统中的行。</p>
</blockquote>
<p><strong>集合</strong> :</p>
<blockquote>
<p>由一组文档组成，如果将MongoDB中的一个文档比喻成关系型数据库中的一行，那么一个集合就相当于一张表。</p>
</blockquote>
<h2 id="Schema"><a href="#Schema" class="headerlink" title="Schema"></a>Schema</h2><blockquote>
<p> 一种以文件形式存储的数据库模型骨架，不具备数据库的操作能力。</p>
</blockquote>
<h3 id="如何定义Schema"><a href="#如何定义Schema" class="headerlink" title="如何定义Schema"></a>如何定义Schema</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> PersonSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</div><div class="line">    <span class="attr">name</span> : &#123; <span class="attr">type</span>:<span class="built_in">String</span> &#125;,</div><div class="line">    <span class="attr">age</span>  : &#123; <span class="attr">type</span>:<span class="built_in">Number</span>, <span class="attr">default</span>:<span class="number">0</span> &#125;,</div><div class="line">    <span class="attr">time</span> : &#123; <span class="attr">type</span>:<span class="built_in">Date</span>, <span class="attr">default</span>:<span class="built_in">Date</span>.now &#125;,</div><div class="line">    <span class="attr">email</span>: &#123; <span class="attr">type</span>:<span class="built_in">String</span>,<span class="attr">default</span>:<span class="string">''</span>&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>mongoose基本属性类型</strong>有：字符串、日期型、数值型、布尔型(Boolean)、null、数组、内嵌文档等。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ExampleSchema = <span class="keyword">new</span> Schema(&#123;</div><div class="line">  <span class="attr">name</span>: <span class="built_in">String</span>,</div><div class="line">  <span class="attr">binary</span>: Buffer,</div><div class="line">  <span class="attr">living</span>: <span class="built_in">Boolean</span>,</div><div class="line">  <span class="attr">updated</span>: <span class="built_in">Date</span>,</div><div class="line">  <span class="attr">age</span>: <span class="built_in">Number</span>,</div><div class="line">  <span class="attr">mixed</span>: Schema.Types.Mixed, <span class="comment">//该混合类型等同于nested</span></div><div class="line">  _id: Schema.Types.ObjectId,  <span class="comment">//主键</span></div><div class="line">  _fk: Schema.Types.ObjectId,  <span class="comment">//外键</span></div><div class="line">  array: [],</div><div class="line">  <span class="attr">arrOfString</span>: [<span class="built_in">String</span>],</div><div class="line">  <span class="attr">arrOfNumber</span>: [<span class="built_in">Number</span>],</div><div class="line">  <span class="attr">arrOfDate</span>: [<span class="built_in">Date</span>],</div><div class="line">  <span class="attr">arrOfBuffer</span>: [Buffer],</div><div class="line">  <span class="attr">arrOfBoolean</span>: [<span class="built_in">Boolean</span>],</div><div class="line">  <span class="attr">arrOfMixed</span>: [Schema.Types.Mixed],</div><div class="line">  <span class="attr">arrOfObjectId</span>: [Schema.Types.ObjectId]</div><div class="line">  nested:&#123;</div><div class="line">    <span class="attr">stuff</span>:<span class="built_in">String</span>,</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[H5项目问题、基础总结及解决方案]]></title>
      <url>http://julytian.coding.me/2017/02/07/H5%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h2 id="Meta基础知识"><a href="#Meta基础知识" class="headerlink" title="Meta基础知识"></a>Meta基础知识</h2><h3 id="H5-基本meta标签"><a href="#H5-基本meta标签" class="headerlink" title="H5 基本meta标签"></a>H5 基本meta标签</h3><a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 设置缩放 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, user-scalable=no, minimal-ui"</span> /&gt;</span></div><div class="line"><span class="comment">&lt;!-- 可隐藏地址栏，仅针对IOS的Safari（注：IOS7.0版本以后，safari上已看不到效果） --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span> /&gt;</span></div><div class="line"><span class="comment">&lt;!-- 仅针对IOS的Safari顶端状态条的样式（可选default/black/black-translucent ） --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span> /&gt;</span></div><div class="line"><span class="comment">&lt;!-- IOS中禁用将数字识别为电话号码/忽略Android平台中对邮箱地址的识别 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span><span class="attr">content</span>=<span class="string">"telephone=no, email=no"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="PC端-基础meta标签"><a href="#PC端-基础meta标签" class="headerlink" title="PC端 基础meta标签"></a>PC端 基础meta标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 页面关键词--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"your tags"</span> /&gt;</span></div><div class="line"><span class="comment">&lt;!-- 页面描述--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"150 words"</span> /&gt;</span></div><div class="line"><span class="comment">&lt;!-- 搜索引擎索引方式：robotterms是一组使用逗号(,)分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。确保正确使用nofollow和noindex属性值。--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span> /&gt;</span></div><div class="line"><span class="comment">&lt;!--</span></div><div class="line">    all：文件将被检索，且页面上的链接可以被查询；</div><div class="line">    none：文件将不被检索，且页面上的链接不可以被查询；</div><div class="line">    index：文件将被检索；</div><div class="line">    follow：页面上的链接可以被查询；</div><div class="line">    noindex：文件将不被检索；</div><div class="line">    nofollow：页面上的链接不可以被查询。</div><div class="line"> --&gt;</div><div class="line"></div><div class="line"> <span class="comment">&lt;!-- 页面重定向和刷新：content内的数字代表时间（秒），既多少时间后刷新。如果加url,则会重定向到指定网页（搜索引擎能够自动检测，也很容易被引擎视作误导而受到惩罚）。--&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"0;url="</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="其他meta标签"><a href="#其他meta标签" class="headerlink" title="其他meta标签"></a>其他meta标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 避免IE使用兼容模式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"HandheldFriendly"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 微软的老式浏览器 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"MobileOptimized"</span> <span class="attr">content</span>=<span class="string">"320"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- uc强制竖屏 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"screen-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- QQ强制竖屏 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- UC强制全屏 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"full-screen"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- QQ强制全屏 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-fullscreen"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- UC应用模式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"browsermode"</span> <span class="attr">content</span>=<span class="string">"application"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- QQ应用模式 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-page-mode"</span> <span class="attr">content</span>=<span class="string">"app"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- windows phone 点击无高光 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="H5页面窗口自动调整到设备宽度-并禁止用户缩放页面"><a href="#H5页面窗口自动调整到设备宽度-并禁止用户缩放页面" class="headerlink" title="H5页面窗口自动调整到设备宽度,并禁止用户缩放页面"></a>H5页面窗口自动调整到设备宽度,并禁止用户缩放页面</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 一、HTML页面结构</span></div><div class="line"><span class="comment">// width    设置viewport宽度，为一个正整数，或字符串‘device-width’</span></div><div class="line"><span class="comment">// height   设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置</span></div><div class="line"><span class="comment">// initial-scale    默认缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// minimum-scale    允许用户最小缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// maximum-scale    允许用户最大缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// user-scalable    是否允许手动缩放</span></div><div class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> /&gt;</div><div class="line"></div><div class="line"><span class="comment">//二、JS动态判断</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> phoneWidth =  <span class="built_in">parseInt</span>(<span class="built_in">window</span>.screen.width);</div><div class="line"><span class="keyword">var</span> phoneScale = phoneWidth/<span class="number">640</span>;</div><div class="line"><span class="keyword">var</span> ua = navigator.userAgent;</div><div class="line"><span class="keyword">if</span> (<span class="regexp">/Android (\d+\.\d+)/</span>.test(ua))&#123;</div><div class="line">    <span class="keyword">var</span> version = <span class="built_in">parseFloat</span>(<span class="built_in">RegExp</span>.$<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span>(version&gt;<span class="number">2.3</span>)&#123;</div><div class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, minimum-scale = '</span>+phoneScale+<span class="string">', maximum-scale = '</span>+phoneScale+<span class="string">', target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, user-scalable=no, target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">可以参考 **手淘** 的 [flexible.js](https:<span class="comment">//github.com/amfe/lib-flexible)</span></div><div class="line"></div><div class="line">**腾讯方案**</div><div class="line"></div><div class="line"><span class="keyword">var</span> autoScale = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> ratio = <span class="number">320</span>/<span class="number">504</span>,   <span class="comment">//这是设计稿的宽高比（504是Iphone的高度去掉标题栏高度）</span></div><div class="line">        winW = <span class="built_in">document</span>.getElement.clientWidth,</div><div class="line">        winH = <span class="built_in">document</span>.getElement.clientHeight,</div><div class="line">        ratio2 = winW/winH,</div><div class="line">        scale;</div><div class="line">    <span class="keyword">if</span>(ratio&lt;ratio2)&#123;</div><div class="line">        scale = (winH/<span class="number">504</span>).toString().substring(<span class="number">0</span>, <span class="number">6</span>);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        scale = (winW/<span class="number">320</span>).toString().substring(<span class="number">0</span>, <span class="number">6</span>);  </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> cssText = <span class="string">'-webkit-transform: scale('</span>+scale+<span class="string">');-webkit-transform-origin: top; opacity:1;'</span>  </div><div class="line">    $(<span class="string">'.wrap'</span>).attr(<span class="string">'style'</span>, cssText);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 添加一定时长以确保宽高获取正确</span></div><div class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.documentElement.clientWidth/<span class="built_in">document</span>.documentElement.clientHeight !== <span class="number">320</span>/<span class="number">504</span>)&#123;</div><div class="line">        autoScale();</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        $(<span class="string">'.page'</span>).css(&#123;<span class="string">'opacity'</span>: <span class="number">1</span>&#125;);</div><div class="line">    &#125;</div><div class="line">&#125;, <span class="number">300</span>);  </div><div class="line"><span class="comment">// 切换横竖屏</span></div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'onorientationchange'</span> <span class="keyword">in</span> <span class="built_in">window</span>?<span class="string">'orientationchange'</span>:<span class="string">'resize'</span>, autoScale, <span class="literal">false</span>)&#123;</div><div class="line">        detectOrientatioin();</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">detectOrientatioin</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.orientation==<span class="number">180</span> || <span class="built_in">window</span>.orientation==<span class="number">0</span>)&#123;</div><div class="line">        <span class="comment">//竖屏</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.orientation==<span class="number">90</span> || <span class="built_in">window</span>.orientation==<span class="number">-90</span>)&#123;</div><div class="line">        <span class="comment">//横屏</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="页面缓存设置"><a href="#页面缓存设置" class="headerlink" title="页面缓存设置"></a>页面缓存设置</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="css-reset"><a href="#css-reset" class="headerlink" title="css reset"></a>css reset</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span>;</div><div class="line"><span class="comment">/* reset */</span></div><div class="line"><span class="selector-tag">html</span>&#123; <span class="attribute">-webkit-text-size-adjust</span>:none;<span class="attribute">-webkit-user-select</span>:none;<span class="attribute">-webkit-touch-callout</span>: none;<span class="attribute">font-family</span>: Helvetica;&#125;</div><div class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;</div><div class="line"><span class="selector-tag">body</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">p</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dd</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">pre</span>,<span class="selector-tag">form</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">th</span>,<span class="selector-tag">td</span>,<span class="selector-tag">select</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">font-weight</span>: normal;<span class="attribute">text-indent</span>: <span class="number">0</span>;&#125;</div><div class="line"><span class="selector-tag">a</span>,<span class="selector-tag">button</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">select</span>&#123; <span class="attribute">background</span>: none; <span class="attribute">-webkit-tap-highlight-color</span>:<span class="built_in">rgba</span>(255,0,0,0); <span class="attribute">outline</span>:none; <span class="attribute">-webkit-appearance</span>:none;&#125;</div><div class="line"><span class="selector-tag">em</span>&#123;<span class="attribute">font-style</span>:normal&#125;</div><div class="line"><span class="selector-tag">li</span>&#123;<span class="attribute">list-style</span>:none&#125;</div><div class="line"><span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:none;&#125;</div><div class="line"><span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:none; <span class="attribute">vertical-align</span>:top;&#125;</div><div class="line"><span class="selector-tag">table</span>&#123;<span class="attribute">border-collapse</span>:collapse;&#125;</div><div class="line"><span class="selector-tag">textarea</span>&#123; <span class="attribute">resize</span>:none; <span class="attribute">overflow</span>:auto;&#125;</div><div class="line"><span class="comment">/* end reset */</span></div></pre></td></tr></table></figure>
<h2 id="公用CSS-style"><a href="#公用CSS-style" class="headerlink" title="公用CSS style"></a>公用CSS style</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* public */</span></div><div class="line"></div><div class="line"><span class="comment">/* 清除浮动 */</span></div><div class="line"><span class="selector-class">.clear</span> &#123; <span class="attribute">zoom</span>:<span class="number">1</span>; &#125;</div><div class="line"><span class="selector-class">.clear</span><span class="selector-pseudo">:after</span> &#123; <span class="attribute">content</span>:<span class="string">''</span>; <span class="attribute">display</span>:block; <span class="attribute">clear</span>:both; &#125;</div><div class="line"></div><div class="line"><span class="comment">/* 定义盒模型为怪异和模型（宽高不受边框影响） */</span></div><div class="line"><span class="selector-class">.boxSiz</span>&#123;</div><div class="line">    <span class="attribute">-webkit-box-sizing</span>: border-box;</div><div class="line">    <span class="attribute">-moz-box-sizing</span>: border-box;</div><div class="line">    <span class="attribute">-ms-box-sizing</span>: border-box;</div><div class="line">    <span class="attribute">-o-box-sizing</span>: border-box;</div><div class="line">    <span class="attribute">box-sizing</span>: border-box;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 强制换行 */</span></div><div class="line"><span class="selector-class">.toWrap</span>&#123;</div><div class="line">    <span class="attribute">word-break</span>: break-all;       <span class="comment">/* 只对英文起作用，以字母作为换行依据。 */</span></div><div class="line">    <span class="attribute">word-wrap</span>: break-word;      <span class="comment">/* 只对英文起作用，以单词作为换行依据。*/</span></div><div class="line">    <span class="attribute">white-space</span>: pre-wrap;     <span class="comment">/* 只对中文起作用，强制换行。*/</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 禁止换行 */</span></div><div class="line"><span class="selector-class">.noWrap</span>&#123;</div><div class="line">    <span class="attribute">white-space</span>:nowrap;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 禁止换行,超出省略号 */</span></div><div class="line"><span class="selector-class">.noWrapEllipsis</span>&#123;</div><div class="line">     <span class="attribute">white-space</span>:nowrap; <span class="attribute">overflow</span>:hidden; <span class="attribute">text-overflow</span>:ellipsis;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 文字两端对齐 */</span></div><div class="line"><span class="selector-class">.text-justify</span>&#123;</div><div class="line">    <span class="attribute">text-align</span>:justify; </div><div class="line">    <span class="attribute">text-justify</span>:inter-ideograph;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 定义盒模型为 flex布局兼容写法并让内容水平垂直居中 */</span></div><div class="line"><span class="selector-class">.flex-center</span>&#123;</div><div class="line">    <span class="attribute">display</span>: -webkit-box;</div><div class="line">    <span class="attribute">display</span>: -moz-box;</div><div class="line">    <span class="attribute">display</span>: -ms-flexbox;</div><div class="line">    <span class="attribute">display</span>: -o-box;</div><div class="line">    <span class="attribute">display</span>: box;</div><div class="line">    <span class="attribute">-webkit-box-pack</span>: center;</div><div class="line">      <span class="attribute">-moz-box-pack</span>: center;</div><div class="line">      <span class="attribute">-ms-flex-pack</span>: center;</div><div class="line">      <span class="attribute">-o-box-pack</span>: center;</div><div class="line">      <span class="attribute">box-pack</span>: center;</div><div class="line">    <span class="attribute">-webkit-box-align</span>: center;</div><div class="line">    <span class="attribute">-moz-box-align</span>: center;</div><div class="line">    <span class="attribute">-ms-flex-align</span>: center;</div><div class="line">    <span class="attribute">-o-box-align</span>: center;</div><div class="line">    <span class="attribute">box-align</span>: center;</div><div class="line">&#125;</div><div class="line"><span class="comment">/* public end */</span></div></pre></td></tr></table></figure>
<h2 id="CSS样式技巧"><a href="#CSS样式技巧" class="headerlink" title="CSS样式技巧"></a>CSS样式技巧</h2><p><strong>1. 禁止ios和android用户选中文字</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.css</span>&#123;<span class="attribute">-webkit-user-select</span>:none&#125;</div></pre></td></tr></table></figure>
<p><strong>2、禁止ios长按时触发系统的菜单，禁止ios&amp;android长按时下载图片</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.css</span>&#123;<span class="attribute">-webkit-touch-callout</span>: none&#125;</div></pre></td></tr></table></figure>
<p><strong>3、webkit去除表单元素的默认样式</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.css</span>&#123;<span class="attribute">-webkit-appearance</span>:none;&#125;</div></pre></td></tr></table></figure>
<p><strong>4、修改webkit表单输入框placeholder的样式</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span>&#123;<span class="attribute">color</span>:<span class="number">#AAAAAA</span>;&#125;</div><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>&#123;<span class="attribute">color</span>:<span class="number">#EEEEEE</span>;&#125;</div></pre></td></tr></table></figure>
<p><strong>5、去除android a/button/input标签被点击时产生的边框 &amp; 去除ios a标签被点击时产生的半透明灰色背景</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span>,<span class="selector-tag">button</span>,<span class="selector-tag">input</span>&#123;<span class="attribute">-webkit-tap-highlight-color</span>:<span class="built_in">rgba</span>(255,0,0,0);&#125;</div></pre></td></tr></table></figure>
<p><strong>6、ios使用-webkit-text-size-adjust禁止调整字体大小</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">-webkit-text-size-adjust</span>: <span class="number">100%</span><span class="meta">!important</span>;&#125;</div></pre></td></tr></table></figure>
<p><strong>7、android 上去掉语音输入按钮</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-speech-button</span> &#123;<span class="attribute">display</span>: none&#125;</div></pre></td></tr></table></figure>
<p><strong>8、移动端定义字体，移动端没有微软雅黑字体</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 移动端定义字体的代码 */</span></div><div class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">font-family</span>:Helvetica;&#125;</div></pre></td></tr></table></figure>
<p><strong>9、禁用Webkit内核浏览器的文字大小调整功能。</strong></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">-webkit-text-size-adjust</span>: <span class="selector-tag">none</span>;</div></pre></td></tr></table></figure>
<h2 id="H5遇到的常见问题"><a href="#H5遇到的常见问题" class="headerlink" title="H5遇到的常见问题"></a>H5遇到的常见问题</h2><h3 id="移动端如何定义字体font-family"><a href="#移动端如何定义字体font-family" class="headerlink" title="移动端如何定义字体font-family"></a>移动端如何定义字体font-family</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@ --------------------------------------中文字体的英文名称</div><div class="line">@ 宋体      SimSun</div><div class="line">@ 黑体      SimHei</div><div class="line">@ 微信雅黑   Microsoft Yahei</div><div class="line">@ 微软正黑体 Microsoft JhengHei</div><div class="line">@ 新宋体    NSimSun</div><div class="line">@ 新细明体  MingLiU</div><div class="line">@ 细明体    MingLiU</div><div class="line">@ 标楷体    DFKai-SB</div><div class="line">@ 仿宋     FangSong</div><div class="line">@ 楷体     KaiTi</div><div class="line">@ 仿宋_GB2312  FangSong_GB2312</div><div class="line">@ 楷体_GB2312  KaiTi_GB2312  </div><div class="line">@</div><div class="line">@ 说明：中文字体多数使用宋体、雅黑，英文用 Helvetica</div><div class="line"></div><div class="line">body &#123; <span class="selector-tag">font-family</span>: <span class="selector-tag">Microsoft</span> <span class="selector-tag">Yahei</span>,<span class="selector-tag">SimSun</span>,<span class="selector-tag">Helvetica</span>; &#125;</div></pre></td></tr></table></figure>
<h3 id="实现打电话发短信写邮件"><a href="#实现打电话发短信写邮件" class="headerlink" title="实现打电话发短信写邮件"></a>实现打电话发短信写邮件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">// 一、打电话</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"tel:0755-10086"</span>&gt;</span>打电话给:0755-10086<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line">//  二、发短信，winphone系统无效</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"sms:10086"</span>&gt;</span>发短信给: 10086<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line">// 三、写邮件</div><div class="line">// 注：在添加这些功能时，第一个功能以"?"开头，后面的以"&amp;"开头</div><div class="line">// 1.普通邮件</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题）</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?cc=zhangqian0406@yeah.net"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 3.跟着抄送地址后，写上&amp;bcc=,可添加密件抄送地址（Android存在兼容问题）</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=384900096@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com;384900096@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 5.包含主题，用?subject=</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?subject=邮件主题"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行 </div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=邮件主题内容%0A腾讯诚信%0A期待您的到来"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 7.内容包含链接，含http(s)://等的文本自动转化为链接</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=http://www.baidu.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 8.内容包含图片（PC不支持）</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=&lt;img src='images/1.jpg' /&gt;"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">// 9.完整示例</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com;384900096@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=993233461@qq.com&amp;subject=[邮件主题]&amp;body=腾讯诚邀您参与%0A%0Ahttp://www.baidu.com%0A%0A&lt;img src='images/1.jpg' /&gt;"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="移动端字体单位font-size选择px还是rem"><a href="#移动端字体单位font-size选择px还是rem" class="headerlink" title="移动端字体单位font-size选择px还是rem"></a>移动端字体单位font-size选择px还是rem</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// 如需适配多种移动设备,建议使用rem。 </div><div class="line">html &#123; font-size: 62.5%; &#125;   // 10*16 = 62.5%</div><div class="line"></div><div class="line">// 设置字体12 谷歌不支持字体小于12px 当然使用css3的 scale 缩放可以修改</div><div class="line">// 这里注意在rem前要加上对应的px值，解决不支持rem的浏览器的兼容问题，做到优雅降级</div><div class="line">body &#123; font-size:12px; font-size:1.2rem; &#125;</div></pre></td></tr></table></figure>
<h3 id="美化表单元素"><a href="#美化表单元素" class="headerlink" title="美化表单元素"></a>美化表单元素</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">// 一、使用appearance改变webkit浏览器的默认外观</div><div class="line">input,select &#123; -webkit-appearance:none; appearance: none; &#125;</div><div class="line"></div><div class="line">// 二、winphone下，使用伪元素改变表单元素默认外观</div><div class="line">// 1.禁用select默认箭头，::-ms-expand修改表单控件下拉箭头，设置隐藏并使用背景图片来修饰</div><div class="line">select::-ms-expand &#123; display:none; &#125;</div><div class="line"></div><div class="line">// 2.禁用radio和checkbox默认样式，::-ms-check修改表单复选框或单选框默认图标，设置隐藏并使用背景图片来修饰</div><div class="line">input[type=radio]::-ms-check,</div><div class="line">input[type=checkbox]::-ms-check &#123; display:none; &#125;</div><div class="line"></div><div class="line">// 3.禁用pc端表单输入框默认清除按钮，::-ms-clear修改清除按钮，设置隐藏并使用背景图片来修饰</div><div class="line">input[type=text]::-ms-clear,</div><div class="line">input[type=tel]::-ms-clear,</div><div class="line">input[type=number]::-ms-clear &#123; display:none; &#125;</div></pre></td></tr></table></figure>
<h3 id="点击元素产生背景或边框怎么去掉"><a href="#点击元素产生背景或边框怎么去掉" class="headerlink" title="点击元素产生背景或边框怎么去掉"></a>点击元素产生背景或边框怎么去掉</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">// ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0去除灰色半透明遮罩；</div><div class="line">// android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果；</div><div class="line">// winphone系统,点击标签产生的灰色半透明背景，能通过设置&lt;meta name="msapplication-tap-highlight" content="no"&gt;去掉；</div><div class="line">// 特殊说明：有些机型去除不了，如小米2。对于按钮类还有个办法，不使用a或者input标签，直接用div标签</div><div class="line">a,button,input,textarea &#123; </div><div class="line">    -webkit-tap-highlight-color: rgba(0,0,0,0); </div><div class="line">    -webkit-user-modify:read-write-plaintext-only; //-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符</div><div class="line">&#125;   </div><div class="line">// 也可以 </div><div class="line">* &#123; -webkit-tap-highlight-color: rgba(0,0,0,0); &#125;</div><div class="line">// winphone下</div><div class="line">&lt;meta name="msapplication-tap-highlight" content="no"&gt;</div></pre></td></tr></table></figure>
<h3 id="移动端click屏幕产生200-300ms的延时响应"><a href="#移动端click屏幕产生200-300ms的延时响应" class="headerlink" title="移动端click屏幕产生200-300ms的延时响应"></a>移动端click屏幕产生200-300ms的延时响应</h3><blockquote>
<p>说明：移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。</p>
<p>以下是历史原因，来源一个公司内一个同事的分享：<br>2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次&gt; 双击后能回到原始状态。</p>
<p>双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。</p>
<p>原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接<a href="#"></a>，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如&gt; 果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导&gt; 致影响其他业务逻辑的处理。</p>
<p>解决方案：<br>fastclick可以解决在手机上点击事件的300ms延迟<br>zepto的touch模块，tap事件也是为了解决在click的延迟问题</p>
<p><a href="http://www.jianshu.com/p/6e2b68a93c88" target="_blank" rel="external">移动端300ms点击延迟和点击穿透问题</a></p>
<p><a href="https://github.com/ftlabs/fastclick" target="_blank" rel="external">FastClick</a> 是 FT Labs 专门为解决移动端浏览器 300 毫秒点击延迟问题所开发的一个轻量级的库</p>
</blockquote>
<h3 id="取消input在ios下，输入的时候英文首字母的默认大写"><a href="#取消input在ios下，输入的时候英文首字母的默认大写" class="headerlink" title="取消input在ios下，输入的时候英文首字母的默认大写"></a>取消input在ios下，输入的时候英文首字母的默认大写</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">autocapitalize</span>=<span class="string">"off"</span> <span class="attr">autocorrect</span>=<span class="string">"off"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="手机拍照和上传图片"><a href="#手机拍照和上传图片" class="headerlink" title="手机拍照和上传图片"></a>手机拍照和上传图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">// IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。Winphone不支持</div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"images/*"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"video/*"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="屏幕旋转的事件和样式"><a href="#屏幕旋转的事件和样式" class="headerlink" title="屏幕旋转的事件和样式"></a>屏幕旋转的事件和样式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// JS处理</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">orientInit</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> orientChk = <span class="built_in">document</span>.documentElement.clientWidth &gt; <span class="built_in">document</span>.documentElement.clientHeight?<span class="string">'landscape'</span>:<span class="string">'portrait'</span>;</div><div class="line">    <span class="keyword">if</span>(orientChk ==<span class="string">'lapdscape'</span>)&#123;</div><div class="line">        <span class="comment">// 这里是横屏下需要执行的事件</span></div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="comment">// 这里是竖屏下需要执行的事件</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">orientInit();</div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'onorientationchange'</span> <span class="keyword">in</span> <span class="built_in">window</span>?<span class="string">'orientationchange'</span>:<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    setTimeout(orientInit, <span class="number">100</span>);</div><div class="line">&#125;,<span class="literal">false</span>)    </div><div class="line"></div><div class="line"><span class="comment">//CSS处理</span></div><div class="line"><span class="comment">//竖屏时样式</span></div><div class="line">@media all and (orientation:portrait)&#123;   &#125;</div><div class="line"><span class="comment">//横屏时样式</span></div><div class="line">@media all and (orientation:landscape)&#123;   &#125;</div></pre></td></tr></table></figure>
<h3 id="audio元素和video元素在ios和andriod中无法自动播放"><a href="#audio元素和video元素在ios和andriod中无法自动播放" class="headerlink" title="audio元素和video元素在ios和andriod中无法自动播放"></a>audio元素和video元素在ios和andriod中无法自动播放</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">// 音频，写法一</div><div class="line">&lt;audio src="music/bg.mp3" autoplay loop controls&gt;你的浏览器还不支持哦&lt;/audio&gt;</div><div class="line"></div><div class="line">// 音频，写法二</div><div class="line">&lt;audio controls="controls"&gt; </div><div class="line">    &lt;source src="music/bg.ogg" type="audio/ogg"&gt;&lt;/source&gt;</div><div class="line">    &lt;source src="music/bg.mp3" type="audio/mpeg"&gt;&lt;/source&gt;</div><div class="line">    优先播放音乐bg.ogg，不支持在播放bg.mp3</div><div class="line">&lt;/audio&gt;</div><div class="line"></div><div class="line">// JS绑定自动播放（操作window时，播放音乐）</div><div class="line">$(window).one('touchstart', function()&#123;</div><div class="line">    music.play();</div><div class="line">&#125;)</div><div class="line"></div><div class="line">// 微信下兼容处理</div><div class="line">document.addEventListener("WeixinJSBridgeReady", function () &#123;</div><div class="line">    music.play();</div><div class="line">&#125;, false);</div><div class="line"></div><div class="line">// 小结</div><div class="line">// 1.audio元素的autoplay属性在IOS及Android上无法使用，在PC端正常</div><div class="line">// 2.audio元素没有设置controls时，在IOS及Android会占据空间大小，而在PC端Chrome是不会占据任何空间</div></pre></td></tr></table></figure>
<h3 id="微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整"><a href="#微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整" class="headerlink" title="微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整"></a>微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 以下代码可使Android机页面不再受用户字体缩放强制改变大小，但是会有1S左右延时，期间可以考虑loading来处理</span></div><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span>(WeixinJSBridge) == <span class="string">"undefined"</span>) &#123;</div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"WeixinJSBridgeReady"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            WeixinJSBridge.invoke(<span class="string">'setFontSizeCallback'</span>, &#123; <span class="string">'fontSize'</span>:<span class="number">0</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">                alert(<span class="built_in">JSON</span>.stringify(res));</div><div class="line">            &#125;)</div><div class="line">        &#125;, <span class="number">0</span>)</div><div class="line">    &#125;);</div><div class="line">&#125;<span class="keyword">else</span>&#123;  </div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        WeixinJSBridge.invoke(<span class="string">'setFontSizeCallback'</span>, &#123; <span class="string">'fontSize'</span>:<span class="number">0</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">            alert(<span class="built_in">JSON</span>.stringify(res));</div><div class="line">        &#125;)</div><div class="line">    &#125;, <span class="number">0</span>)   </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// IOS下可使用 -webkit-text-size-adjust禁止用户调整字体大小</span></div><div class="line">body &#123; -webkit-text-size-adjust:<span class="number">100</span>%!important; &#125;</div><div class="line"></div><div class="line"><span class="comment">// 最好的解决方案：最好使用rem或百分比布局</span></div></pre></td></tr></table></figure>
<h3 id="重力感应事件"><a href="#重力感应事件" class="headerlink" title="重力感应事件"></a>重力感应事件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 运用HTML5的deviceMotion，调用重力感应事件</span></div><div class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.DeviceMotionEvent)&#123;</div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'devicemotion'</span>, deviceMotionHandler, <span class="literal">false</span>)</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="keyword">var</span> speed = <span class="number">30</span>;</div><div class="line"><span class="keyword">var</span> x = y = z = lastX = lastY = lastZ = <span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">deviceMotionHandler</span>(<span class="params">eventData</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> acceleration = event.accelerationIncludingGravity;</div><div class="line">    x = acceleration.x;</div><div class="line">    y = acceleration.y; </div><div class="line">    z = acceleration.z;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(x-lastX)&gt;speed || <span class="built_in">Math</span>.abs(y-lastY)&gt;speed || <span class="built_in">Math</span>.abs(z-lastZ)&gt;speed )&#123;</div><div class="line">        <span class="comment">//这里是摇动后要执行的方法 </span></div><div class="line">        yaoAfter();</div><div class="line">    &#125;</div><div class="line">    lastX = x;</div><div class="line">    lastY = y;</div><div class="line">    lastZ = z;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">yaoAfter</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//do something</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 说明：说见案例摇一摇效果中yao.js</span></div></pre></td></tr></table></figure>
<h3 id="定位的坑"><a href="#定位的坑" class="headerlink" title="定位的坑"></a>定位的坑</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">// fixed定位</div><div class="line">// 1.ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位</div><div class="line">// 2.android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位</div><div class="line">// 3.ios4下不支持position:fixed</div><div class="line">// 解决方案：使用[Iscroll](http://cubiq.org/iscroll-5)，如：</div><div class="line">&lt;div id="wrapper"&gt;</div><div class="line">        &lt;ul&gt;</div><div class="line">               &lt;li&gt;&lt;/li&gt;</div><div class="line">               .....</div><div class="line">        &lt;/ul&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;script src="iscroll.js"&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">    var myscroll;</div><div class="line">    function loaded()&#123;</div><div class="line">        myscroll=new iScroll("wrapper");</div><div class="line">    &#125;</div><div class="line">    window.addEventListener("DOMContentLoaded",loaded,false);</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line"></div><div class="line">// position定位</div><div class="line">// Android下弹出软键盘弹出时，影响absolute元素定位</div><div class="line">// 解决方案:</div><div class="line">var ua = navigator.userAgent.indexOf('Android');</div><div class="line">if(ua&gt;-1)&#123;</div><div class="line">    $('.ipt').on('focus', function()&#123;</div><div class="line">        $('.css').css(&#123;'visibility':'hidden'&#125;)</div><div class="line">    &#125;).on('blur', function()&#123;</div><div class="line">        $('.css').css(&#123;'visibility':'visible'&#125;)</div><div class="line">    &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="播放视频不全屏"><a href="#播放视频不全屏" class="headerlink" title="播放视频不全屏"></a>播放视频不全屏</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="number">1.</span>ios7+支持自动播放</div><div class="line"><span class="number">2.</span>支持Airplay的设备（如：音箱、Apple TV)播放</div><div class="line">x-webkit-airplay=<span class="string">"true"</span> </div><div class="line"><span class="number">3.</span>播放视频不全屏</div><div class="line">webkit-playsinline=<span class="string">"true"</span> </div><div class="line"></div><div class="line">&lt;video x-webkit-airplay=<span class="string">"true"</span> webkit-playsinline=<span class="string">"true"</span> preload=<span class="string">"auto"</span> autoplay src=<span class="string">"http://"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h3 id="JS判断设备"><a href="#JS判断设备" class="headerlink" title="JS判断设备"></a>JS判断设备</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">deviceType</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> ua = navigator.userAgent;</div><div class="line">    <span class="keyword">var</span> agent = [<span class="string">"Android"</span>, <span class="string">"iPhone"</span>, <span class="string">"SymbianOS"</span>, <span class="string">"Windows Phone"</span>, <span class="string">"iPad"</span>, <span class="string">"iPod"</span>];    </div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;len,len = agent.length; i++)&#123;</div><div class="line">        <span class="keyword">if</span>(ua.indexOf(agent[i])&gt;<span class="number">0</span>)&#123;         </div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">deviceType();</div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    deviceType();</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="JS判断微信浏览器"><a href="#JS判断微信浏览器" class="headerlink" title="JS判断微信浏览器"></a>JS判断微信浏览器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isWeixin</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</div><div class="line">    <span class="keyword">if</span>(ua.match(<span class="regexp">/MicroMessenger/i</span>)==<span class="string">'micromessenger'</span>)&#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="消除transition闪屏"><a href="#消除transition闪屏" class="headerlink" title="消除transition闪屏"></a>消除transition闪屏</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.css</span> &#123;</div><div class="line">    <span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">    <span class="attribute">-webkit-backface-visibility</span>: hidden;</div><div class="line">    <span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="开启硬件加速"><a href="#开启硬件加速" class="headerlink" title="开启硬件加速"></a>开启硬件加速</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">// 目前，像Chrome/Filefox/Safari/IE9+以及最新版本Opera都支持硬件加速，当检测到某个DOM元素应用了某些CSS规则时就会自动开启，从而解决页面闪白，保证动画流畅。</div><div class="line">.css &#123;</div><div class="line">    -webkit-transform: translate3d(0,0,0);</div><div class="line">    -moz-transform: translate3d(0,0,0);</div><div class="line">    -ms-transform: translate3d(0,0,0);</div><div class="line">    transform: translate3d(0,0,0);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="渲染优化"><a href="#渲染优化" class="headerlink" title="渲染优化"></a>渲染优化</h3><blockquote>
<p>禁止使用iframe（阻塞父文档onload事件）<br>禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能）<br>使用CSS3代码代替JS动画；<br>开启GPU加速；<br>使用base64位编码图片(不小图而言，大图不建议使用)<br>对于一些小图标，可以使用base64位编码，以减少网络请求。但不建议大图使用，比较耗费CPU。小图标优势在于：<br>减少HTTP请求；<br>避免文件跨域；<br>修改及时生效；</p>
</blockquote>
<h3 id="移动端touch事件（区分webkit和winphone）"><a href="#移动端touch事件（区分webkit和winphone）" class="headerlink" title="移动端touch事件（区分webkit和winphone）"></a>移动端touch事件（区分webkit和winphone）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 当用户手指放在移动设备在屏幕上滑动会触发的touch事件 </span></div><div class="line"><span class="comment">// 以下支持webkit</span></div><div class="line">touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指</div><div class="line">touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动</div><div class="line">touchend——当手指离开屏幕时触发</div><div class="line">touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用</div><div class="line"></div><div class="line"><span class="comment">// TouchEvent说明：</span></div><div class="line">touches：屏幕上所有手指的信息</div><div class="line">targetTouches：手指在目标区域的手指信息</div><div class="line">changedTouches：最近一次触发该事件的手指信息</div><div class="line">touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息</div><div class="line"></div><div class="line"><span class="comment">// 参数信息(changedTouches[0])</span></div><div class="line">clientX、clientY在显示区的坐标</div><div class="line">target：当前元素</div><div class="line"></div><div class="line"><span class="comment">// 事件响应顺序</span></div><div class="line">ontouchstart  &gt; ontouchmove  &gt; ontouchend &gt; onclick</div><div class="line"></div><div class="line"><span class="comment">// 以下支持winphone 8</span></div><div class="line">MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指</div><div class="line">MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html&#123;-ms-touch-action: none;&#125;可以阻止默认情况的发生：阻止页面滚动</div><div class="line">MSPointerUp——当手指离开屏幕时触发</div></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="http://mp.weixin.qq.com/s/JVUpsz9QHsNV0_7U-3HCMg" target="_blank" rel="external">H5项目常见问题汇总及解决方案</a></li>
<li><a href="https://github.com/julytian/issues-blog/issues/6" target="_blank" rel="external">自己整理的</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo教程]]></title>
      <url>http://julytian.coding.me/2017/02/06/hexo%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>从网上摘录一部分hexo搭建教程。<br><a id="more"></a><br><a href="https://login926.top/2016/08/17/Hexo_Skip_Generated/" target="_blank" rel="external">在 Hexo 博客中跳过渲染，创建自定义网页</a></p>
<p><a href="https://login926.top/2016/07/20/HexoMedia/" target="_blank" rel="external">Hexo博客中插入音乐/视频</a></p>
<p>安装插件使用用法</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% aplayer <span class="string">"Caffeine"</span> <span class="string">"Jeff Williams"</span> <span class="string">"http://7xq131.com1.z0.glb.clouddn.com/Preparation.mp3"</span> <span class="string">"autoplay"</span> %&#125;</div><div class="line"></div><div class="line">&#123;% dplayer <span class="string">"url=http://devtest.qiniudn.com/若能绽放光芒.mp4"</span> <span class="string">"api=http://dplayer.daoapp.io"</span> <span class="string">"pic=http://devtest.qiniudn.com/若能绽放光芒.png"</span> <span class="string">"id=9E2E3368B56CDBB4"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"token=tokendemo"</span> %&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[新的一年]]></title>
      <url>http://julytian.coding.me/2017/02/06/%E6%96%B0%E7%9A%84%E4%B8%80%E5%B9%B4/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h3 id="新篇"><a href="#新篇" class="headerlink" title="新篇"></a>新篇</h3><p>2017年上班的第一天，不知做啥，于是我干脆在coding上面基于<code>hexo</code>重新搭建博客。</p>
<p>距离上一次写博客已经是毕业之前，回想一下，那是羞涩的学生模样。</p>
<p>毕业之前，在一个电商公司实习，本以为大公司可以学习到更多的东西，规范代码等等之类的美好。Native!!!!<br><a id="more"></a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5041667&auto=1&height=66"></iframe>


]]></content>
    </entry>
    
  
  
</search>
